============================
= CcPy
============================

Introduction
---------------------

CcPy (*C*ruise*C*ontrol written in *Py*thon) is (yet another) automatic continuous integration server.

The main goal of the project is to create a lightweight backend capable of running on various *nix flavours.
to control build process from desktop machines.


Features
---------------------
- Runs on any unix-derived system (as long as Python runs there)
- Supports svn and git repositories
- Notifies on build results by email


Quick start
---------------------

Prerequisites:
    CcPy requires Python 2.5+ or 3.x

To install
-------------
  ./setup.py [install]

The installation script merely copies CcPy config files ccpy.conf and ccpyd.conf to /etc dir. 
You have to edit these configs first before starting with CcPy. Please refer to the 'Configuring CcPy' section in this README.

To start
-------------
    ./ccpy.sh

The script will daemonize itself and start executing tasks from ccpy.conf
Normally you will place this call in cron or another scheduler.
The default location of CcPy log file is /var/log/ccpyd.log, you can change it in /etc/ccpyd.conf


To stop the running script
---------------
    ./ccpy.sh stop

    
To uninstall
-----------
   ./setup.py uninstall

The uninstallation script removes config files created during installation and cleans up temporary files created by CcPy.


Configuring CcPy
---------------------

CcPy uses two config files (xml format): 
  ccpyd.conf  - configure CcPy global settings such as logging and location of project config file
  ccpy.conf  - configure projects to be built

  Global settings (ccpyd.conf)
  -------------------
    Example config file:

    <ccpyd>
      <ccpyConfig>/etc/ccpy.conf</ccpyConfig>
      <logging enabled="on">
        <file>/var/log/ccpyd.log</file>
        <level>DEBUG</level>
      </logging>
    </ccpyd>


    Node        : ccpyConfig
    Description : location of the projects configuration file 
    Type        : string
    Default     : /etc/ccpy.conf
    Required    : no

    Node        : logging
    Description : logging settings element
    Type        : element with logging attributes and subelements
    Default     : logging is disabled
    Required    : no
    
      Node        : enabled (attribute of the "logging" element)
      Description : logging enabled flag 
      Type        : boolean ("on/yes/true" or "off/no/false")
      Default     : "off"
      Required    : no

      Node        : file (subelement of the "logging" element)
      Description : log file location
      Type        : string
      Default     : "/var/log/ccpyd.log"
      Required    : yes if logging is enabled

      Node        : level (subelement of the "logging" element)
      Description : logging threshold
      Type        : "DEBUG" or "INFO" or "WARN" or "ERROR"
      Default     : "DEBUG" 
      Required    : yes if logging is enabled
      Notes       : this element is currently ignored


  Projects settings (ccpy.conf)
  -------------------
    Example config file:

    Projects config file contains the ordered list of projectsts, each project contains the ordered list of tasks.
    The following task types are supported: "svn", "make" and "execute". 

    Node        : project
    Description : project settings element
    Type        : element with project name attribute and subelements
    Default     : N/A
    Required    : no

      Node        : name (attribute of the "project" element)
      Description : project name
      Type        : string 
      Default     : N/A
      Required    : yes

      Node        : failOnError (subelement of the "project" element)
      Description : This flag controls whether CcPy should immediately stop executing the rest project tasks  
                    and render the entire project status to FAILED once one of the project tasks fails
      Type        : boolean ("on/yes/true" or "off/no/false")
      Default     : yes
      Required    : no

        Node        : sourcecontrol (subelement of the "project/tasks" element)
        Description : source control settings element
        Type        : element with sourcecontrol type attribute and subelements 
        Default     : N/A
        Required    : no

          Node        : type (attribute of the "sourcecontrol" element)
          Description : source control type.
          Type        : string. Supported source control types are "svn" and "git". 
          Default     : N/A
          Required    : yes

          Node        : url (subelement of the "sourcecontrol" element)
          Description : URL of the remote repository (checkout URL for subversion, clone URL for git)
          Type        : string
          Default     : N/A
          Required    : yes

          Node        : workingDirectory (subelement of the "sourcecontrol" element)
          Description : directory holding local checkout
          Type        : string
          Default     : current directory
          Required    : no
          
          Node        : preCleanWorkingDirectory (subelement of the "sourcecontrol" element)
          Description : clean working directory before checking out
          Type        : boolean ("on/yes/true" or "off/no/false")
          Default     : off
          Required    : no

        Node        : make (subelement of the "project/tasks" element)
        Description : make settings element used to execute makefiles
        Type        : element with subelements 
        Default     : N/A
        Required    : no

          Node        : workingDirectory (subelement of the "make" element)
          Description : working directory for make
          Type        : string
          Default     : current directory
          Required    : no

          Node        : args (subelement of the "make" element)
          Description : make arguments
          Type        : string
          Default     : empty
          Required    : no

          Node        : timeout (subelement of the "make" element)
          Description : number of seconds to wait before assuming that the make has hung and should be killed
          Type        : unsigned integer
          Default     : 600 (10 minutes)
          Required    : no

       Node        : exec (subelement of the "project/tasks" element)
       Description : element used to launch executables 
       Type        : element with subelements 
       Default     : N/A
       Required    : no

         Node        : executable (subelement of the "exec" element)
         Description : executable to launch
         Type        : string
         Default     : no
         Required    : yes

         Node        : args (subelement of the "exec" element)
         Description : executable arguments
         Type        : string
         Default     : empty
         Required    : no

         Node        : workingDirectory (subelement of the "exec" element)
         Description : working directory for the executable
         Type        : string
         Default     : current directory
         Required    : no

         Node        : timeout (subelement of the "exec" element)
         Description : number of seconds to wait before assuming that the executable has hung and should be killed
         Type        : unsigned integer
         Default     : 600 (10 minutes)
         Required    : no
         
         Node        : warningExitCode (subelement of the "exec" element)
         Description : by default executable exit code 0 render the build as successful and <>0 is considered as failed build 
                       You can use this tag to specify extra exit code that still renders the build successful but set status to "WARNING" instead of "OK"
         Type        : integer
         Default     : N/A
         Required    : no

      Node        : emailNotification (subelement of the "project" element)
      Description : contains settings for sending email notifications with integration results 
      Type        : element with subelements 
      Default     : N/A
      Required    : no

        Node        : from (subelement of the "emailNotification" element)
        Description : sender's email address 
        Type        : string
        Default     : empty
        Required    : no

        Node        : to (subelement of the "emailNotification" element)
        Description : contains correspondents to receive email notifications with integration results 
        Type        : comma-separated list of strings
        Default     : empty list
        Required    : no
        
        Node        : format (subelement of the "emailNotification" element)
        Description : Email format
        Type        : 'attachment', 'html' or 'plain'
        Default     : 'attachment'
        Required    : no     
        
        Node        : server (subelement of the "emailNotification" element)
        Description : SMTP server host 
        Type        : string
        Default     : 'localhost'
        Required    : no
        
        Node        : port (subelement of the "emailNotification" element)
        Description : SMTP server port 
        Type        : integer
        Default     : 25
        Required    : no

        Node        : username (subelement of the "emailNotification" element)
        Description : SMTP server username 
        Type        : string
        Default     : not supplied
        Required    : no

        Node        : password (subelement of the "emailNotification" element)
        Description : SMTP server password 
        Type        : string
        Default     : not supplied
        Required    : no        



Author
---------------------

Andrei Korostelev andrei at korostelev dot net
2008-2015


Licensing
---------------------
BSD license. See LICENSE.
